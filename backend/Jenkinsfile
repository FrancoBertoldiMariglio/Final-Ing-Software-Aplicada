pipeline {
    agent any

    triggers {
        githubPush()
    }

    environment {
        DOCKERHUB_CREDENTIALS = credentials('dockerhub')
        DOCKER_IMAGE = 'francobertoldimariglio/biblioteca-backend'
        DOCKER_TAG = "${BUILD_NUMBER}"
    }

    stages {
        stage('Wait for Dependencies') {
            steps {
                sh '''
                    while ! curl -s http://elasticsearch:9200 > /dev/null; do sleep 1; done
                    while ! mysqladmin ping -h mysql --silent; do sleep 1; done
                '''
            }
        }

        stage('Unit Tests') {
            steps {
                dir('../backend') {
                    sh './mvnw clean test'
                }
            }
        }

        stage('Integration Tests') {
            steps {
                dir('../backend') {
                    sh './mvnw verify -Pintegration-tests'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('../backend') {
                    sh "docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} ."
                }
            }
        }

        stage('Push to DockerHub') {
            steps {
                sh '''
                    echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin
                    docker push ${DOCKER_IMAGE}:${DOCKER_TAG}
                    docker tag ${DOCKER_IMAGE}:${DOCKER_TAG} ${DOCKER_IMAGE}:latest
                    docker push ${DOCKER_IMAGE}:latest
                '''
            }
        }
    }

    post {
        always {
            sh 'docker logout'
        }
    }
    
    post {
        success {
            githubCommitStatus('success')
        }
        failure {
            githubCommitStatus('failure')
        }
        always {
            sh 'docker logout'
        }
    }
}
